## arg 1:  the new package version
pre_install() {
        :
}

APP_USER=blacklist
APP_GROUP=users
APP_NAME=blacklist

## arg 1:  the new package version
post_install() {
        echo "Creating $APP_USER user (if not found)"
        if ! id -u $APP_USER > /dev/null 2>&1; then
            useradd -m $APP_USER
        fi

        APP_USER_HOME="$(eval echo ~$APP_USER)"

        echo "Creating required directories in $APP_USER home"
        mkdir -p "$APP_USER_HOME/pdfs"
        mkdir -p "$APP_USER_HOME/thumbnails"

        echo "Chown to $APP_USER:users"
        chown "$APP_USER:$APP_GROUP" "$APP_USER_HOME/pdfs"
        chown "$APP_USER:$APP_GROUP" "$APP_USER_HOME/thumbnails"

        systemctl daemon-reload
        systemctl enable redis
        systemctl restart redis

        echo "Run $APP_NAME post install script"
        $APP_NAME post_install --config_prod

        echo "Run $APP_NAME services"
        systemctl start $APP_NAME
        systemctl enable $APP_NAME
        systemctl start "${APP_NAME}_celeryworker"
        systemctl enable "${APP_NAME}_celeryworker"
        systemctl start "${APP_NAME}_celerybeat"
        systemctl enable "${APP_NAME}_celerybeat"
}

## arg 1:  the new package version
## arg 2:  the old package version
pre_upgrade() {
        :
}

## arg 1:  the new package version
## arg 2:  the old package version
post_upgrade() {
        APP_USER_HOME="$(eval echo ~$APP_USER)"
        echo "Creating required directories in "${APP_USER} home (if not found)"
        mkdir -p "$APP_USER_HOME/pdfs"
        mkdir -p "$APP_USER_HOME/thumbnails"

        echo "Chown to $APP_USER:users"
        chown "$APP_USER:$APP_GROUP" "$APP_USER_HOME/pdfs"
        chown "$APP_USER:$APP_GROUP" "$APP_USER_HOME/thumbnails"

        echo "Run "${APP_NAME} migrations"
        $APP_NAME db upgrade
        systemctl daemon-reload
        # Restart service only when is active or enabled
        if systemctl is-active --quiet $APP_NAME || systemctl is-enabled --quiet $APP_NAME; then
            echo "Restarting ${APP_NAME} service"
            systemctl restart $APP_NAME
        fi

        if systemctl is-active --quiet "${APP_NAME}_celeryworker" || systemctl is-enabled --quiet "${APP_NAME}_celeryworker"; then
            echo "Restarting ${APP_NAME}_celeryworker service"
            systemctl restart "${APP_NAME}_celeryworker"
        fi

        if systemctl is-active --quiet "${APP_NAME}_celerybeat" || systemctl is-enabled --quiet "${APP_NAME}_celerybeat"; then
            echo "Restarting ${APP_NAME}_celerybeat service"
            systemctl restart "${APP_NAME}_celerybeat"
        fi
}

## arg 1:  the old package version
pre_remove() {
        :
}

## arg 1:  the old package version
post_remove() {
        :
}
